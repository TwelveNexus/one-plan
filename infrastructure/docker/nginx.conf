# Nginx Configuration for One Plan Microservices
# This configuration provides reverse proxy, load balancing, and SSL termination

# Main context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events context
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

    # Upstream Definitions for Microservices
    upstream api_gateway {
        least_conn;
        server api-gateway:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream identity_service {
        least_conn;
        server identity-service:8081 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream tenant_service {
        least_conn;
        server tenant-service:8082 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream organization_service {
        least_conn;
        server organization-service:8083 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream project_service {
        least_conn;
        server project-service:8084 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream task_service {
        least_conn;
        server task-service:8085 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream requirement_service {
        least_conn;
        server requirement-service:8086 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream storyboard_service {
        least_conn;
        server storyboard-service:8087 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream integration_service {
        least_conn;
        server integration-service:8088 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream notification_service {
        least_conn;
        server notification-service:8089 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream analytics_service {
        least_conn;
        server analytics-service:8090 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream subscription_service {
        least_conn;
        server subscription-service:8091 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Main Server Block
    server {
        listen 80;
        listen [::]:80;
        server_name localhost api.oneplan.local;

        # Security
        server_tokens off;

        # Health Check Endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Gateway - Main Entry Point
        location / {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Direct Service Access (for development/debugging)
        location /direct/identity/ {
            limit_req zone=auth burst=10 nodelay;

            rewrite ^/direct/identity/(.*)$ /$1 break;
            proxy_pass http://identity_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/tenant/ {
            rewrite ^/direct/tenant/(.*)$ /$1 break;
            proxy_pass http://tenant_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/organization/ {
            rewrite ^/direct/organization/(.*)$ /$1 break;
            proxy_pass http://organization_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/project/ {
            rewrite ^/direct/project/(.*)$ /$1 break;
            proxy_pass http://project_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/task/ {
            rewrite ^/direct/task/(.*)$ /$1 break;
            proxy_pass http://task_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/requirement/ {
            rewrite ^/direct/requirement/(.*)$ /$1 break;
            proxy_pass http://requirement_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/storyboard/ {
            rewrite ^/direct/storyboard/(.*)$ /$1 break;
            proxy_pass http://storyboard_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/integration/ {
            rewrite ^/direct/integration/(.*)$ /$1 break;
            proxy_pass http://integration_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/notification/ {
            rewrite ^/direct/notification/(.*)$ /$1 break;
            proxy_pass http://notification_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/analytics/ {
            rewrite ^/direct/analytics/(.*)$ /$1 break;
            proxy_pass http://analytics_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /direct/subscription/ {
            rewrite ^/direct/subscription/(.*)$ /$1 break;
            proxy_pass http://subscription_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket Support for Real-time Features
        location /ws/ {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # File Upload Handling
        location /api/v1/upload {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 100M;

            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeouts for file uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Static content (if served by nginx)
        location /static/ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
            # alias /var/www/static/;
        }

        # API Documentation (Swagger UI)
        location /docs/ {
            proxy_pass http://api_gateway/swagger-ui/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Security - Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /\.env {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTPS Server Block (for production)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.yourdomain.com;

        # SSL Configuration (update paths for your certificates)
        # ssl_certificate /etc/ssl/certs/yourdomain.crt;
        # ssl_certificate_key /etc/ssl/private/yourdomain.key;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Use same location blocks as HTTP server
        # ... (copy all location blocks from above)
    }

    # Monitoring endpoint
    server {
        listen 8080;
        server_name localhost;
        access_log off;

        location /nginx-status {
            stub_status on;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        location /nginx-health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
